#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define TABULEIRO 4

void incializar(int matriz[][TABULEIRO]);
void mostrar(int matriz[][TABULEIRO]);
void inserir_num(int matriz[][TABULEIRO], int aleatorio);
int contar_vazios(int matriz[][TABULEIRO]);
int aleatorio(int vazios);
void mover_esquerda (int matriz[][TABULEIRO]); 
void mover_direita (int matriz[][TABULEIRO]);  
void mover_cima (int matriz[][TABULEIRO]);     
void mover_baixo (int matriz[][TABULEIRO]);    

int main(void){
    system("clear");
    int matriz[TABULEIRO][TABULEIRO], jogo = 0; 
    unsigned short vazios = 0, n, i;
    char jogada = ' ';
    srand(clock());

    
    printf("Deseja jogar?\n1 - sim\n2 - não\n");
    scanf("%d",&jogo);
    while(jogo != 2 && jogo != 1){
        printf("Digite apenas 1 ou 2\n");
        printf("Deseja jogar?\n1 - sim\n2 - não\n");
        scanf("%d",&jogo);
    }
    incializar(matriz);
    getchar();
    
    while(jogo == 1){
        vazios = contar_vazios(matriz);
        if(vazios > 2){
            n = (rand()%2)+1;
            for(i = 0; i < n; i++){
                inserir_num(matriz, aleatorio(vazios));
            }
        }else if(vazios == 1 || vazios == 2){
            inserir_num(matriz, aleatorio(vazios));
        }
        vazios = contar_vazios(matriz);
        mostrar(matriz);
        if(vazios == 0){
            printf("Você perdeu\n");
            return 1;
        }
        scanf("%c", &jogada);
        getchar();
        while(jogada != 'w' && jogada != 'W' && jogada != 's' && jogada != 'S' && jogada != 'd' && jogada != 'D' && jogada != 'a' && jogada != 'A'){
            printf("Apenas w a s d\n");
            scanf("%c", &jogada);
            getchar();
        }
        switch(jogada){
            case 'W':
            case 'w':
		        mover_cima (matriz);           
            break;
            case 'A':
            case 'a':
		        mover_esquerda (matriz);
            break;
            case 'S':
            case 's':
		        mover_baixo (matriz);             
            break;
            case 'D':
            case 'd':
		        mover_direita (matriz);     
            break;
            default:
                printf("Você só pode mover usando W,A,S,D");
            break;
        }
        
    } 


    return 0; // Fim da função main
}
// inicio das funções 
void incializar(int matriz[][TABULEIRO]){
    for(int l = 0; l < TABULEIRO; l++){
        for(int c = 0; c < TABULEIRO; c++){
            matriz[l][c] = 0;
        }
    }
}

void mostrar(int matriz[][TABULEIRO]){
    system("clear");
    puts("/------|------|------|------\\");
    for(int l = 0; l < TABULEIRO; l++){
        for(int c = 0; c < TABULEIRO; c++){
            if(matriz[l][c] == 0) printf("|      ",matriz[l][c]);
            if(matriz[l][c] > 0 && matriz[l][c] < 10) printf("|     %d",matriz[l][c]);
            if(matriz[l][c] > 10 && matriz[l][c] < 100) printf("|    %d",matriz[l][c]);
            if(matriz[l][c] > 100 && matriz[l][c] < 1000) printf("|   %d",matriz[l][c]);
            if(matriz[l][c] > 1000) printf("|   %d",matriz[l][c]);
        }
        printf("|\n");
        if(l != 3 )printf("|------|------|------|------|\n");
    }
    puts("\\------|------|------|------/");
}

int contar_vazios(int matriz[][TABULEIRO]){
    int vazios = 0;
    for(int l = 0; l < TABULEIRO; l++){
        for(int c = 0; c < TABULEIRO; c++){
            if(matriz[l][c] == 0) vazios ++; 
        } 
    }
    return vazios;   
}

void inserir_num(int matriz[][TABULEIRO], int aleatorio){
    for(int l = 0; l < TABULEIRO; l++){
        for(int c = 0; c < TABULEIRO; c++){
            
            if(matriz[l][c] == 0){
                if(aleatorio == 0){
                    matriz[l][c] = 2;
                    return ;
                }else{
                    aleatorio--;
                }
            } 
        }
    }
}

int aleatorio(int vazios){    
    return rand()%vazios;
}

void mover_esquerda (int matriz[][TABULEIRO]) {
    int soma[] = {0, 0, 0, 0};
    for(int l = 0; l < TABULEIRO; l++){
    	for(int c = 1; c < TABULEIRO;){ 
			if(c == 0) c++;
            else if(matriz[l][c] != 0 && matriz[l][c-1] == 0){
                matriz[l][c-1] = matriz[l][c];
                matriz[l][c] = 0;
                if(soma[c] == 1){
                    soma[c] = 0;
                    soma[c-1] = 0; 
                }
                c--;
            }else if(soma[c-1] == 0 && matriz[l][c] != 0 && matriz[l][c] == matriz[l][c-1]){
                matriz[l][c-1] *=2;
                soma[c-1] = 1;
                matriz[l][c] = 0;
                c++;
            }else{
                c++;
            }
		}
        for(int i = 0; i < 4; i++) soma[i] = 0;
	}
}

void mover_direita (int matriz[][TABULEIRO]) {
    int soma[] = {0, 0, 0, 0};
	for(int l = 0; l < TABULEIRO; l++){
    	for(int c = 2; c >= 0;){ 
			if(c == 3) c--;
            else if(matriz[l][c] != 0 && matriz[l][c+1] == 0){
                matriz[l][c+1] = matriz[l][c];
                matriz[l][c] = 0;
                if(soma[c] == 1){
                    soma[c] = 0;
                    soma[c+1] = 1;
                }
                c++;
            }else if(soma[c+1] == 0 && matriz[l][c] != 0 && matriz[l][c] == matriz[l][c+1]){
                matriz[l][c+1] *=2;
                matriz[l][c] = 0;
                soma[c+1] = 1;
                c--;
            }else{
                c--;    
            }
		}
        for(int i = 0; i < 4; i++) soma[i] = 0;
	}
}

void mover_cima (int matriz[][TABULEIRO]) {
    int soma[] = {0, 0, 0, 0};
    for(int c = 0; c < TABULEIRO; c++){
    	for(int l = 1; l < TABULEIRO;){ 
			if(l == 0) l++;
            else if(matriz[l][c] != 0 && matriz[l-1][c] == 0){
                matriz[l-1][c] = matriz[l][c];
                matriz[l][c] = 0;
                if(soma[l] = 1){
                    soma[l-1] = 1;
                    soma[l] = 0;
                }
                l--;
            }else if(soma[l-1] == 0 && matriz[l][c] != 0 && matriz[l][c] == matriz[l-1][c]){
                matriz[l-1][c] *=2;
                matriz[l][c] = 0;
                soma[l-1] = 1;
                l++;
            }else{
                l++;
            }
		
		}
        for(int i = 0; i < 4; i++) soma[i] = 0;
	}
}

void mover_baixo (int matriz[][TABULEIRO]) {
    int soma[] = {0, 0, 0, 0};
    for(int c = 0; c < TABULEIRO; c++){
    	for(int l = 2; l >= 0;){ 
			if(l == 3) l--;
            else if(matriz[l][c] != 0 && matriz[l+1][c] == 0){
                matriz[l+1][c] = matriz[l][c];
                matriz[l][c] = 0;
                if(soma[l] == 1){
                    soma[l] = 0;
                    soma[l+1] = 1;
                }
                l++;
            }else if(soma[l+1] == 0 && matriz[l][c] != 0 && matriz[l][c] == matriz[l+1][c]){
                matriz[l+1][c] *=2;
                matriz[l][c] = 0;
                soma[l+1] = 1;
                l--;
            }else{
                l--;    
            }
		}
        for(int i = 0; i < 4; i++) soma[i] = 0;
	}            
}
